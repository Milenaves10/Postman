{
	"info": {
		"_postman_id": "13e45669-2bca-4e50-a2fb-7c7b13aa5527",
		"name": "HW_3_POSTMAN",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "login",
							"value": "Milena",
							"type": "text"
						},
						{
							"key": "password",
							"value": "12t3456",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/login",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = pm.response.json();\r",
							"// 1.Статстус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//2.Проверка структуры json в ответе.\r",
							"let schema = {  \r",
							"    \"type\": \"object\",\r",
							"    \"properties\":{  \r",
							"        \"person\":{  \r",
							"            \"type\": \"object\",\r",
							"            \"properties\":{  \r",
							"                \"u_age\": {  \r",
							"                    \"type\":\"integer\"\r",
							"                },\r",
							"                \"u_name\":{  \r",
							"                    \"type\":\"array\",\r",
							"                    \"items\": [  \r",
							"                        {   \r",
							"                            \"type\": \"string\"\r",
							"                        },\r",
							"                        {   \r",
							"                            \"type\":\"integer\"\r",
							"                        },\r",
							"                        {   \r",
							"                            \"type\":\"integer\"\r",
							"                        }\r",
							"                    ]\r",
							"                },\r",
							"                \"u_salary_1_5_year\": {  \r",
							"                    \"type\": \"integer\"\r",
							"                }\r",
							"            },\r",
							"            \"required\":[    \r",
							"                \"u_age\",\r",
							"                \"u_name\",\r",
							"                \"u_salary_1_5_year\"\r",
							"            ]\r",
							"        },\r",
							"        \"qa_salary_after_12_months\": {  \r",
							"            \"type\": \"number\"\r",
							"        },\r",
							"        \"qa_salary_after_6_months\": {   \r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"start_qa_salary\": {    \r",
							"            \"type\": \"integer\"\r",
							"        }\r",
							"\r",
							"    },\r",
							"    \"required\": [   \r",
							"        \"person\",\r",
							"        \"qa_salary_after_12_months\",\r",
							"        \"qa_salary_after_6_months\",\r",
							"        \"start_qa_salary\"\r",
							"    ]\r",
							"};\r",
							"pm.test ('Schema is valid', function() {    \r",
							"    pm.response.to.have.jsonSchema(schema)\r",
							"});\r",
							"//3. В ответе указаны коэффициенты умножения salary, напишите тесты по проверке правильности результата перемножения на коэффициент.\r",
							"pm.test(\"qa_salary_after_6_months\", function(){\r",
							"    pm.expect(jsonData.qa_salary_after_6_months).to.eql(jsonData.start_qa_salary*2)\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_12_months\", function(){\r",
							"    pm.expect(jsonData.qa_salary_after_12_months).to.eql(jsonData.start_qa_salary*2.9)\r",
							"});\r",
							"\r",
							"pm.test(\"u_salary_1_5_year\", function(){\r",
							"    pm.expect(jsonData.person.u_salary_1_5_year).to.eql(jsonData.start_qa_salary*4)\r",
							"});\r",
							"console.log(jsonData.person.u_salary_1_5_year)\r",
							"// 4) Достать значение из поля 'u_salary_1.5_year' \r",
							"pm.environment.set(\"u_salary_1_5_year\", jsonData.person.u_salary_1_5_year)\r",
							"\r",
							"// let jsonData = pm.response.json()\r",
							"//     console.log(u_salary_1_5_year)\r",
							"// pm.test(\"start_qa_salary\", function(){  \r",
							"//     pm.expect(jsonData.start_qa_salary).to.eql(jsonData.start_qa_salary)\r",
							"// });\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"name\":\"Milena\",\r\n\"age\": 20,\r\n\"salary\": 1000,\r\n\"auth_token\": \"/s34lfgbj/Milena/jjd909/77952kjkWpqc221912t34562658evny\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "new_data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = pm.response.json();\r",
							"// 1.Статстус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//2.Проверка структуры json в ответе.\r",
							"var schema = {\r",
							"    \"type\": \"object\",\r",
							"    \"required\": [\r",
							"        \"person\",\r",
							"        \"qa_salary_after_12_months\",\r",
							"        \"qa_salary_after_6_months\",\r",
							"        \"start_qa_salary\",\r",
							"    ],\r",
							"        \"properties\":{\r",
							"            \"person\": {\r",
							"                \"required\": [\r",
							"                    \"u_age\",\r",
							"                    \"u_name\",\r",
							"                    \"u_salary_1_5_year\"\r",
							"                ],\r",
							"                \"type\": \"object\",\r",
							"                \"properties\":{\r",
							"                    \"u_age\":{\"type\":\"number\"},\r",
							"                    \"u_name\":{\"type\":\"array\"},\r",
							"                    \"u_salary_1_5_year\":{\"type\":\"number\"}\r",
							"                },\r",
							"            },\r",
							"            \"qa_salary_after_12_months\":{\"type\":\"number\"},\r",
							"            \"qa_salary_after_6_months\":{\"type\":\"number\"},\r",
							"            \"start_qa_salary\":{\"type\":\"number\"}\r",
							"                \r",
							"    }\r",
							"}\r",
							"//3) В ответе указаны коэффициенты умножения salary, напишите тесты по проверке правильности результата перемножения на коэффициент.\r",
							"let salary = jsonData.salary[0]\r",
							"let salary_2 = +jsonData.salary[1]\r",
							"let salary_3 = +jsonData.salary[2]\r",
							"pm.test(\"Check_salary_1\", function(){\r",
							"    pm.expect(salary).to.eql(salary)\r",
							"});\r",
							"pm.test(\"Check_salary_2\", function(){\r",
							"    pm.expect(salary_2).to.eql(salary*2);\r",
							"});\r",
							"pm.test(\"Check_salary_3\", function(){\r",
							"    pm.expect(salary_3).to.eql(salary*3)\r",
							"});\r",
							"//4) проверить, что 2-й элемент массива salary больше 1-го и 0-го\r",
							"pm.test(\"2-й элемент > 1-го и 2-го\", function(){\r",
							"    pm.expect(thirdInt).to.above(first, secondInt)\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Milena",
							"type": "text"
						},
						{
							"key": "age",
							"value": "20",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "/s34lfgbj/Milena/jjd909/41803kjkWpqc447212t3456379791evny",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/new_data",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"new_data"
					]
				}
			},
			"response": []
		},
		{
			"name": "test_pet_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = pm.response.json()\r",
							"//1) Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//2) Проверка структуры json в ответе.\r",
							"var schema = {\r",
							"    \"type\": \"object\",\r",
							"    \"required\": [\r",
							"        \"person\",\r",
							"        \"qa_salary_after_12_months\",\r",
							"        \"qa_salary_after_6_months\",\r",
							"        \"start_qa_salary\",\r",
							"    ],\r",
							"        \"properties\":{\r",
							"            \"person\": {\r",
							"                \"required\": [\r",
							"                    \"u_age\",\r",
							"                    \"u_name\",\r",
							"                    \"u_salary_1_5_year\"\r",
							"                ],\r",
							"                \"type\": \"object\",\r",
							"                \"properties\":{\r",
							"                    \"u_age\":{\"type\":\"number\"},\r",
							"                    \"u_name\":{\"type\":\"array\"},\r",
							"                    \"u_salary_1_5_year\":{\"type\":\"number\"}\r",
							"                },\r",
							"            },\r",
							"            \"qa_salary_after_12_months\":{\"type\":\"number\"},\r",
							"            \"qa_salary_after_6_months\":{\"type\":\"number\"},\r",
							"            \"start_qa_salary\":{\"type\":\"number\"}\r",
							"                \r",
							"    }\r",
							"}\r",
							"//3) В ответе указаны коэффициенты умножения weight, напишите тесты по проверке правильности результата перемножения на коэффициент.\r",
							"let wes = request.data.weight\r",
							"console.log(wes)\r",
							"pm.test(\"Проверка - daily_food\", function(){\r",
							"    pm.expect(jsonData.daily_food).to.eql(wes*0.012)\r",
							"});\r",
							"pm.test(\"Проверка - daily_sleep\", function(){\r",
							"    pm.expect(jsonData.daily_sleep).to.eql(wes*2.5)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "20",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Milena",
							"type": "text"
						},
						{
							"key": "weight",
							"value": "54",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "/s34lfgbj/Milena/jjd909/58451kjkWpqc470512t3456141143evny",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/test_pet_info",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"test_pet_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "get_test_user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = pm.response.json();\r",
							"//1) Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//2) Проверка структуры json в ответе.\r",
							"var schema = {\r",
							"    \"type\": \"object\",\r",
							"    \"required\": [\r",
							"        \"person\",\r",
							"        \"qa_salary_after_12_months\",\r",
							"        \"qa_salary_after_6_months\",\r",
							"        \"start_qa_salary\",\r",
							"    ],\r",
							"        \"properties\":{\r",
							"            \"person\": {\r",
							"                \"required\": [\r",
							"                    \"u_age\",\r",
							"                    \"u_name\",\r",
							"                    \"u_salary_1_5_year\"\r",
							"                ],\r",
							"                \"type\": \"object\",\r",
							"                \"properties\":{\r",
							"                    \"u_age\":{\"type\":\"number\"},\r",
							"                    \"u_name\":{\"type\":\"array\"},\r",
							"                    \"u_salary_1_5_year\":{\"type\":\"number\"}\r",
							"                },\r",
							"            },\r",
							"            \"qa_salary_after_12_months\":{\"type\":\"number\"},\r",
							"            \"qa_salary_after_6_months\":{\"type\":\"number\"},\r",
							"            \"start_qa_salary\":{\"type\":\"number\"}\r",
							"                \r",
							"    }\r",
							"}\r",
							"//3) Проверить что занчение поля name = значению переменной name из окружения\r",
							"let name_field = request.data.name\r",
							"let n_environment = pm.environment.get('name')\r",
							"console.log(\"name_field\", name_field)\r",
							"console.log(\"n_environment\", n_environment)\r",
							"pm.test(\"Name = environment\", function(){\r",
							"    pm.expect(name_field).to.eql(n_environment)\r",
							"});\r",
							"// 4) Проверить что значение поля age в ответе соответсвует отправленному в запросе значению поля age\r",
							"let a = request.data.age\r",
							"pm.test(\"Age =  response.age\", function(){\r",
							"    pm.expect(jsonData.age).to.eql(a)\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "20",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Milena",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "/s34lfgbj/Milena/jjd909/58451kjkWpqc470512t3456141143evny",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/get_test_user",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"get_test_user"
					]
				}
			},
			"response": []
		},
		{
			"name": "currency",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "/s34lfgbj/Milena/jjd909/58451kjkWpqc470512t3456141143evny",
							"type": "text"
						},
						{
							"key": "age",
							"value": "20",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Milena",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/currency",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"currency"
					]
				}
			},
			"response": []
		}
	]
}